<?xml version="1.0"?>

<!--
  NOTE: This module build script expects the property "coreHome" to be set and pointing - either absolutely or 
  relatively - to the directory of your core project. In Eclipse this can be done by going to 
  Window -> Preferences -> Any -> Runtime -> Properties and adding a the coreHome property.
 -->
<project name="jssc" basedir="." xmlns:mvn="antlib:org.apache.maven.artifact.ant">
	<property file="library.properties" />
	<property name="fullName" value="${name}-${version}" />
	<property name="deploy.jar.paths" value="${coreHome}/target/lib" />
	<property name="release.jar.paths" value="${coreHome}/lib" />

	<taskdef resource="net/sf/antcontrib/antcontrib.properties" classpath="${coreHome}/lib-opt/ant-contrib-1.0b3.jar" />

	<typedef resource="org/apache/maven/artifact/ant/antlib.xml" uri="antlib:org.apache.maven.artifact.ant" classpath="${coreHome}/lib-opt/maven-ant-tasks-2.1.3.jar" />

	<!-- Define the maven included deps (if any) -->
	<available property="pom.exists" file="pom.xml" type="file" />
	<if>
		<isset property="pom.exists" />
		<then>
			<mvn:pom file="pom.xml" id="maven-pom" />
			<mvn:dependencies filesetId="maven-deps" type="jar" pomRefId="maven-pom" />
			<mvn:dependencies filesetId="maven-deps-runtime" type="jar" pomRefId="maven-pom" useScope="runtime" />
		</then>
		<else>
			<!-- Use built core's lib folder instead -->
			<fileset id="maven-deps" dir="${coreHome}/target/lib">
				<include name="*.jar" />
			</fileset>
			<!-- Use the lib folder instead -->
			<fileset id="maven-deps-runtime" dir="lib" erroronmissingdir="false">
				<include name="*.jar" />
			</fileset>
		</else>
	</if>

	<path id="master-classpath">
		<fileset refid="maven-deps" />
		<fileset refid="maven-deps-runtime" />
		<fileset dir="lib">
			<include name="*.jar" />
		</fileset>
		<pathelement path="target/java" />
	</path>

	<target name="clean" description="Clean the target area">
		<delete dir="target/java" />
	</target>

	<target name="compile" description="Compile main source tree java files">
		<mkdir dir="target/java" />

		<available property="lib.exists" file="lib" type="dir" />
		<if>
			<isset property="lib.exists" />
			<then>
			</then>
			<else>
				<mkdir dir="lib" />
			</else>
		</if>

		<javac destdir="target/java" target="1.6" source="1.6" debug="true" debuglevel="lines,vars,source" deprecation="false" optimize="false" failonerror="true" includeantruntime="false">
			<src path="src" />
			<classpath refid="master-classpath" />
		</javac>
	</target>

	<target name="jar" depends="clean,compile" description="Create a jar file of the compiled classes">
		<delete file="target/lib/${fullName}.jar" />
		<delete file="target/MANIFEST.MF" />
		<tstamp>
			<format property="TODAY" pattern="yyyy-MM-dd HH:mm:ss" />
		</tstamp>

		<manifest file="target/MANIFEST.MF">
			<attribute name="Built-By" value="Infinite Automation Software" />
			<attribute name="Build-Date" value="${TODAY}" />
			<attribute name="Version" value="${version}" />
			<attribute name="Release-Date" value="${releaseDate}" />
		</manifest>

		<mkdir dir="target/lib" />

		<!-- Copy in the libs -->
		<copy todir="target/java/libs" preservelastmodified="true">
			<fileset dir="libs">
				<include name="**/*" />
			</fileset>
		</copy>

		<jar destfile="target/lib/${fullName}.jar" manifest="target/MANIFEST.MF">
			<fileset dir="target/java">
				<include name="**/*.*" />
			</fileset>
		</jar>


	</target>



	<target name="docs" description="Generate Java Doc">
		<javadoc sourcepath="src" destdir="target/java/doc" classpathref="master-classpath" />
	</target>

	<target name="deploy" depends="jar" description="Copy the jar to configured places">
		<foreach list="${deploy.jar.paths}" target="|deploy" param="todir" delimiter="|">
			<param name="deploy.file" value="target/lib/${fullName}.jar" />
		</foreach>
	</target>

	<target name="|deploy">
		<copy todir="${todir}" preservelastmodified="true" file="${deploy.file}" />
	</target>

	<target name="release" depends="jar" description="Release build and deploy">
		<foreach list="${release.jar.paths}" target="|deploy" param="todir" delimiter="|">
			<param name="deploy.file" value="target/lib/${fullName}.jar" />
		</foreach>
	</target>

</project>
